<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:DialogueMaker">
    
    <Color x:Key="ValidationErrorColor">#f44336</Color>
    <SolidColorBrush x:Key="ValidationErrorBrush" Color="{StaticResource ValidationErrorColor}"/>
    <SolidColorBrush x:Key="defaultForeground" Color="Brown"/>
    <Color x:Key="BackgroundColor">#191D1E</Color>
    <Color x:Key="LightBackgroundColor">#3B3B3B</Color>
    <Color x:Key="SecondaryColorDark">#585858</Color>
    <Color x:Key="DefaultFontColor">#e4ebea</Color>
    <Color x:Key="GradientStartButtonColor">#D500F9</Color>
    <Color x:Key="GradientStopButtonColor">#FF5722</Color>
    <Color x:Key="HoverGradientStartButtonColor">#E040FB</Color>
    <Color x:Key="HoverGradientStopButtonColor">#FF7043</Color>
    <!--<Color x:Key="HoverGradientStartButtonColor">#9C27B0</Color>
    <Color x:Key="HoverGradientStopButtonColor">#D32F2F</Color>-->
    <SolidColorBrush x:Key="DefaultBackground" Color="{StaticResource BackgroundColor}"/>
    <SolidColorBrush x:Key="LightBackground" Color="{StaticResource LightBackgroundColor}"/>
    <SolidColorBrush x:Key="SecondaryColor" Color="#28CA6C"/>
    <SolidColorBrush x:Key="SecondaryDark" Color="{StaticResource SecondaryColorDark}"/>
    <SolidColorBrush x:Key="FontColor" Color="{StaticResource DefaultFontColor}"/>
    <SolidColorBrush x:Key="DefaultButtonBackground" Color="#47D48D"/>
    <SolidColorBrush x:Key="DefaultButtonBackgroundHover" Color="#589371"/>
    <SolidColorBrush x:Key="ButtonColor" Color="#28CA6C"/>
    <SolidColorBrush x:Key="HoverButton" Color="#45DE7E"/>
    <SolidColorBrush x:Key="DeleteButtonColor" Color="#FF424C"/>
    <SolidColorBrush x:Key="DeleteButtonColorHover" Color="#FC5C65"/>
    <SolidColorBrush x:Key="GradientStartButton" Color="#E040FB"/>
    <SolidColorBrush x:Key="GradientStopButton" Color="#AD1457"/>
    <SolidColorBrush x:Key="NotifWarning" Color="#DA4167"/>

    <Style TargetType="{x:Type TextBlock}">
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="ButtonBase">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource DefaultButtonBackground}" />
        <Setter Property="Padding" Value="10,6,10,6" />
        <Setter Property="FontFamily" Value="Montserrat Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" x:Name="BtnBorder"  Padding="{TemplateBinding Padding}" CornerRadius="18">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DefaultButtonBackgroundHover}" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="TopTabButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource LightBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" Padding="8,4,8,4" CornerRadius="5" Margin="0,0,0,0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DeleteButtonColor}">
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="NormalButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource ButtonColor}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource HoverButton}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="DeleteButton" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{StaticResource DeleteButtonColor}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource DeleteButtonColorHover}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Label}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Montserrat Medium"/>
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="Padding" Value="2"/>
    </Style>

    <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
        <Border Background="{TemplateBinding Background}" 
                x:Name="Bd"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="15" Padding="5" Margin="0">
            <ScrollViewer x:Name="PART_ContentHost" Padding="0" VerticalAlignment="Center" >
            </ScrollViewer>
        </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="TextBoxBigControlTemplate" TargetType="{x:Type TextBoxBase}">
        <Border Background="{TemplateBinding Background}" 
                x:Name="Bd"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="15" Padding="5" Margin="0">
            <ScrollViewer x:Name="PART_ContentHost" Padding="0" >
            </ScrollViewer>
        </Border>
    </ControlTemplate>

    <Style TargetType="{x:Type TextBox}">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Montserrat"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="{StaticResource LightBackground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="5">
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Grid x:Name="Grid">
                        <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto" Fill="Transparent" />
                        <Border x:Name="Rectangle1" CornerRadius="10,0,0,10" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" Height="Auto"  Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Tag" Value="Horizontal">
                            <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="Height" Value="Auto" />
                            <Setter TargetName="Rectangle1" Property="CornerRadius" Value="0,0,10,10"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Border CornerRadius="10">
                        <Grid Background="Transparent">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <ScrollContentPresenter Grid.Column="0" />
                        <ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                        <ScrollBar x:Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Grid.Column="0" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                    </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Background" Value="{StaticResource LightBackground}" />
        <Setter Property="Foreground" Value="{StaticResource SecondaryDark}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Border x:Name="BackgroundBorder" Background="{TemplateBinding Background}" CornerRadius="10">
                        <Grid x:Name="GridRoot" Width="19" Background="Transparent">
                            <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="false">
                                <Track.Thumb>
                                    <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" Style="{DynamicResource ScrollThumbs}" />
                                </Track.Thumb>
                            </Track>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true">
                            <Setter Value="{StaticResource SecondaryDark}" TargetName="Thumb" Property="Background" />
                        </Trigger>
                        <Trigger SourceName="Thumb" Property="IsDragging" Value="true">
                            <Setter Value="#6B6B6B" TargetName="Thumb" Property="Background" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="Orientation" Value="Horizontal">
                            <Setter Property="Margin" Value="0,0,0,0"/>
                            <Setter TargetName="GridRoot" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <!--<Setter TargetName="BackgroundBorder" Property="CornerRadius" Value="10"/>-->
                            <Setter TargetName="PART_Track" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Width" Value="Auto" />
                            <Setter Property="Height" Value="8" />
                            <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Window" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="20"/>
    </Style>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="10"
                  Padding="3"
                  Background="{StaticResource LightBackground}"
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="10,0,0,10" 
                  Padding="3"
                  Margin="1" 
                  Background="{StaticResource LightBackground}" 
                  BorderBrush="#FF97A0A5"
                  BorderThickness="0,0,0,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="White"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{StaticResource LightBackground}"/>
    </ControlTemplate>

    <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource FontColor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <Label Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left"/>
                        <TextBox x:Name="PART_EditableTextBox"
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="{StaticResource LightBackground}"
                            Foreground="Green"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"
                            FontSize="14"
                            FontFamily="Montserrat"/>
                        <Popup 
                            Name="Popup" 
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown" 
                              SnapsToDevicePixels="True"                
                              Width="{Binding Path=ActualWidth,RelativeSource={RelativeSource TemplatedParent}}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                x:Name="DropDownBorder"  CornerRadius="0,0,10,10"
                                    Margin="10,0,10,0"
                                Background="{StaticResource LightBackground}"

                                BorderThickness="1,0,1,1"
                                BorderBrush="#888888"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="10,1,10,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border"
                              Padding="3,4,3,4"
                              SnapsToDevicePixels="true"
                            Margin="10,0,10,0" CornerRadius="5">
                            <ContentPresenter/>
                        </Border>
                        <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource LightBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SecondaryDark}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabItem">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="FontFamily" Value="Montserrat Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" BorderBrush="{StaticResource LightBackground}" CornerRadius="5,5,0,0" Margin="2,0">
                        <ContentPresenter x:Name="ContentSite"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        ContentSource="Header"
                                        Margin="10,2" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource LightBackground}" />
                            <Setter Property="Foreground" Value="{StaticResource FontColor}" />
                        </Trigger>
                        <Trigger SourceName="ContentSite" Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SecondaryDark}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource SecondaryColor}" />
                            <Setter Property="Foreground" Value="{StaticResource FontColor}"  />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListView">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListView">
                    <Grid>
                        <Grid.OpacityMask>
                            <VisualBrush Visual="{Binding ElementName=Mask}" />
                        </Grid.OpacityMask>
                        <Border x:Name="Mask" CornerRadius="10" Background="{StaticResource LightBackground}" />
                        <Border Background="{StaticResource LightBackground}" CornerRadius="10" x:Name="Border1">
                            <ScrollViewer>
                                <ItemsPresenter />
                            </ScrollViewer>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ListViewItem">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ListViewItem">
                    <Border x:Name="bd" CornerRadius="10" Margin="0,0,0,2" Padding="3,5,3,5">
                        <Label Height="25"
                            Content="{TemplateBinding Content}"
                            ContentTemplate="{TemplateBinding ContentTemplate}"
                            FontFamily="Montserrat"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="False">
                            <Setter TargetName="bd" Property="Background" Value="transparent" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource SecondaryDark}" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="bd" Property="Background" Value="{StaticResource SecondaryColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TabControl">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid ClipToBounds="True" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnDefinition0" Width="*"/>
                            <ColumnDefinition Name="ColumnDefinition2" Width="0"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Name="RowDefinition0" Height="Auto"/>
                            <RowDefinition Name="RowDefinition1" Height="*"/>
                        </Grid.RowDefinitions>
                        <DockPanel
                  Name="HeaderPanel"
                  Grid.Column="0"
                  Grid.Row="0"
                  Margin="2,2,2,0"
                  Panel.ZIndex="1"
                  IsItemsHost="True"
                  KeyboardNavigation.TabIndex="1"/>
                        <Border
                  Name="ContentPanel"
                  Grid.Column="0"
                  Grid.Row="1"
                  Background="{TemplateBinding Panel.Background}"
                  BorderBrush="{TemplateBinding Border.BorderBrush}"
                  BorderThickness="{TemplateBinding Border.BorderThickness}"
                  KeyboardNavigation.DirectionalNavigation="Contained"
                  KeyboardNavigation.TabIndex="2"
                  KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                     Name="PART_SelectedContentHost"
                     Margin="{TemplateBinding Control.Padding}"
                     Content="{TemplateBinding TabControl.SelectedContent}"
                     ContentSource="SelectedContent"
                     ContentStringFormat="{TemplateBinding TabControl.SelectedContentStringFormat}"
                     ContentTemplate="{TemplateBinding TabControl.SelectedContentTemplate}"
                     SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="{x:Type CheckBox}" TargetType="CheckBox">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border"  
              Width="20" 
              Height="20" 
              CornerRadius="200" 
              Background="{StaticResource LightBackground}"
              BorderThickness="2"
              BorderBrush="{StaticResource SecondaryDark}">
                                <!--<Path
                Width="9" Height="9" 
                x:Name="CheckMark"
                SnapsToDevicePixels="False" 
                Stroke="{StaticResource SecondaryColor}"
                StrokeThickness="3"
                Data="M 0 0 L 9 9 M 0 9 L 9 0" />-->
                                <Path x:Name="CheckMark" Fill="{StaticResource SecondaryColor}" HorizontalAlignment="Center" VerticalAlignment="Center" >
                                    <Path.Data>
                                        <EllipseGeometry Center="5,5" RadiusX="5" RadiusY="5" />
                                    </Path.Data>
                                </Path>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="0,0,0,0"
            VerticalAlignment="Center"
            HorizontalAlignment="Left"
            RecognizesAccessKey="True"/>
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="false">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Data" Value="M 0 7 L 7 0" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource LightBackground}" />
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DefaultBackground}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="ToolTip">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToolTip}" >
                    <Border Background="{StaticResource FontColor}" CornerRadius="10" Padding="5" Opacity="0.95">
                        <ContentPresenter Margin="1" HorizontalAlignment="Center" VerticalAlignment="Top" TextBlock.FontFamily="Montserrat" TextBlock.FontSize="14" TextBlock.Foreground="{StaticResource DefaultBackground}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>